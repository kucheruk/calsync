using System.Net;
using System.Text;
using System.Xml.Linq;

namespace CalSync.Tests;

/// <summary>
/// –ú–æ–∫-—Å–µ—Ä–≤–µ—Ä –¥–ª—è –∏–º–∏—Ç–∞—Ü–∏–∏ Exchange Web Services
/// </summary>
public class MockEwsServer : IDisposable
{
    private readonly HttpListener _listener;
    private readonly string _baseUrl;
    private readonly CancellationTokenSource _cancellationTokenSource;
    private Task? _serverTask;
    private readonly Dictionary<string, Func<XDocument, string>> _requestHandlers;

    public MockEwsServer(int port = 8080)
    {
        _baseUrl = $"http://localhost:{port}/EWS/Exchange.asmx";
        _listener = new HttpListener();
        _listener.Prefixes.Add($"http://localhost:{port}/");
        _cancellationTokenSource = new CancellationTokenSource();
        _requestHandlers = new Dictionary<string, Func<XDocument, string>>();

        SetupDefaultHandlers();
    }

    public string ServiceUrl => _baseUrl;

    /// <summary>
    /// –ó–∞–ø—É—Å—Ç–∏—Ç—å –º–æ–∫-—Å–µ—Ä–≤–µ—Ä
    /// </summary>
    public void Start()
    {
        _listener.Start();
        _serverTask = Task.Run(async () => await HandleRequestsAsync(_cancellationTokenSource.Token));
        Console.WriteLine($"üöÄ Mock EWS Server –∑–∞–ø—É—â–µ–Ω –Ω–∞ {_baseUrl}");
    }

    /// <summary>
    /// –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –º–æ–∫-—Å–µ—Ä–≤–µ—Ä
    /// </summary>
    public void Stop()
    {
        _cancellationTokenSource.Cancel();
        _listener.Stop();
        _serverTask?.Wait(TimeSpan.FromSeconds(5));
        Console.WriteLine("üõë Mock EWS Server –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω");
    }

    /// <summary>
    /// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    /// </summary>
    private void SetupDefaultHandlers()
    {
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–∞–ª–µ–Ω–¥–∞—Ä—è (Folder.Bind)
        _requestHandlers["GetFolder"] = HandleGetFolder;

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–æ–∏—Å–∫–∞ —Å–æ–±—ã—Ç–∏–π (FindAppointments)
        _requestHandlers["FindItem"] = HandleFindItem;

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–µ—Ç–∞–ª–µ–π —Å–æ–±—ã—Ç–∏—è (Load)
        _requestHandlers["GetItem"] = HandleGetItem;

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–æ–±—ã—Ç–∏—è
        _requestHandlers["CreateItem"] = HandleCreateItem;

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–±—ã—Ç–∏—è
        _requestHandlers["DeleteItem"] = HandleDeleteItem;
    }

    /// <summary>
    /// –û–±—Ä–∞–±–æ—Ç–∫–∞ HTTP –∑–∞–ø—Ä–æ—Å–æ–≤
    /// </summary>
    private async Task HandleRequestsAsync(CancellationToken cancellationToken)
    {
        while (!cancellationToken.IsCancellationRequested)
        {
            try
            {
                var context = await _listener.GetContextAsync();
                _ = Task.Run(() => ProcessRequest(context), cancellationToken);
            }
            catch (HttpListenerException)
            {
                // –°–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
                break;
            }
            catch (Exception ex)
            {
                Console.WriteLine($"‚ùå –û—à–∏–±–∫–∞ –≤ Mock EWS Server: {ex.Message}");
            }
        }
    }

    /// <summary>
    /// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–¥–µ–ª—å–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
    /// </summary>
    private void ProcessRequest(HttpListenerContext context)
    {
        try
        {
            var request = context.Request;
            var response = context.Response;

            // –ß–∏—Ç–∞–µ–º —Ç–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞
            string requestBody;
            using (var reader = new StreamReader(request.InputStream, Encoding.UTF8))
            {
                requestBody = reader.ReadToEnd();
            }

            Console.WriteLine($"üì® EWS Request: {request.HttpMethod} {request.Url}");
            Console.WriteLine($"üìÑ Request Body: {requestBody}");

            // –ü–∞—Ä—Å–∏–º SOAP –∑–∞–ø—Ä–æ—Å
            var soapDoc = XDocument.Parse(requestBody);
            var soapAction = GetSoapAction(soapDoc);

            // –ü–æ–ª—É—á–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –¥–µ–π—Å—Ç–≤–∏—è
            var responseXml = _requestHandlers.ContainsKey(soapAction)
                ? _requestHandlers[soapAction](soapDoc)
                : CreateErrorResponse("–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ");

            Console.WriteLine($"üì§ EWS Response: {responseXml}");

            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç
            var responseBytes = Encoding.UTF8.GetBytes(responseXml);
            response.ContentType = "text/xml; charset=utf-8";
            response.ContentLength64 = responseBytes.Length;
            response.StatusCode = 200;

            response.OutputStream.Write(responseBytes, 0, responseBytes.Length);
            response.OutputStream.Close();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–∞: {ex.Message}");
            try
            {
                context.Response.StatusCode = 500;
                context.Response.Close();
            }
            catch { }
        }
    }

    /// <summary>
    /// –ò–∑–≤–ª–µ—á—å SOAP –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –∑–∞–ø—Ä–æ—Å–∞
    /// </summary>
    private string GetSoapAction(XDocument soapDoc)
    {
        var ns = XNamespace.Get("http://schemas.microsoft.com/exchange/services/2006/messages");

        if (soapDoc.Descendants(ns + "GetFolder").Any()) return "GetFolder";
        if (soapDoc.Descendants(ns + "FindItem").Any()) return "FindItem";
        if (soapDoc.Descendants(ns + "GetItem").Any()) return "GetItem";
        if (soapDoc.Descendants(ns + "CreateItem").Any()) return "CreateItem";
        if (soapDoc.Descendants(ns + "DeleteItem").Any()) return "DeleteItem";

        return "Unknown";
    }

    /// <summary>
    /// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–∞–ª–µ–Ω–¥–∞—Ä—è
    /// </summary>
    private string HandleGetFolder(XDocument request)
    {
        return @"<?xml version=""1.0"" encoding=""utf-8""?>
<s:Envelope xmlns:s=""http://schemas.xmlsoap.org/soap/envelope/"">
    <s:Header>
        <h:ServerVersionInfo MajorVersion=""15"" MinorVersion=""0"" MajorBuildNumber=""1497"" MinorBuildNumber=""2"" Version=""V2016_SP1"" xmlns:h=""http://schemas.microsoft.com/exchange/services/2006/types"" xmlns=""http://schemas.microsoft.com/exchange/services/2006/types"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""/>
    </s:Header>
    <s:Body xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
        <m:GetFolderResponse xmlns:m=""http://schemas.microsoft.com/exchange/services/2006/messages"" xmlns:t=""http://schemas.microsoft.com/exchange/services/2006/types"">
            <m:ResponseMessages>
                <m:GetFolderResponseMessage ResponseClass=""Success"">
                    <m:ResponseCode>NoError</m:ResponseCode>
                    <m:Folders>
                        <t:CalendarFolder>
                            <t:FolderId Id=""MOCK_CALENDAR_ID_123456789ABCDEF"" ChangeKey=""MOCK_CHANGE_KEY_123""/>
                            <t:DisplayName>–ö–∞–ª–µ–Ω–¥–∞—Ä—å</t:DisplayName>
                            <t:TotalCount>3</t:TotalCount>
                            <t:ChildFolderCount>0</t:ChildFolderCount>
                        </t:CalendarFolder>
                    </m:Folders>
                </m:GetFolderResponseMessage>
            </m:ResponseMessages>
        </m:GetFolderResponse>
    </s:Body>
</s:Envelope>";
    }

    /// <summary>
    /// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–∏—Å–∫–∞ —Å–æ–±—ã—Ç–∏–π
    /// </summary>
    private string HandleFindItem(XDocument request)
    {
        return @"<?xml version=""1.0"" encoding=""utf-8""?>
<s:Envelope xmlns:s=""http://schemas.xmlsoap.org/soap/envelope/"">
    <s:Header>
        <h:ServerVersionInfo MajorVersion=""15"" MinorVersion=""0"" MajorBuildNumber=""1497"" MinorBuildNumber=""2"" Version=""V2016_SP1"" xmlns:h=""http://schemas.microsoft.com/exchange/services/2006/types""/>
    </s:Header>
    <s:Body>
        <m:FindItemResponse xmlns:m=""http://schemas.microsoft.com/exchange/services/2006/messages"" xmlns:t=""http://schemas.microsoft.com/exchange/services/2006/types"">
            <m:ResponseMessages>
                <m:FindItemResponseMessage ResponseClass=""Success"">
                    <m:ResponseCode>NoError</m:ResponseCode>
                    <m:RootFolder TotalItemsInView=""3"" IncludesLastItemInRange=""true"">
                        <t:Items>
                            <t:CalendarItem>
                                <t:ItemId Id=""TEST001"" ChangeKey=""DwAAABYAAAA""/>
                                <t:Subject>[TEST] CalSync —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–±—ã—Ç–∏–µ 1</t:Subject>
                                <t:Start>2025-06-17T10:00:00Z</t:Start>
                                <t:End>2025-06-17T11:00:00Z</t:End>
                                <t:Location>–¢–µ—Å—Ç–æ–≤–∞—è –ª–æ–∫–∞—Ü–∏—è 1</t:Location>
                                <t:LegacyFreeBusyStatus>Busy</t:LegacyFreeBusyStatus>
                            </t:CalendarItem>
                            <t:CalendarItem>
                                <t:ItemId Id=""TEST002"" ChangeKey=""DwAAABYAAAA""/>
                                <t:Subject>–û–±—ã—á–Ω–æ–µ —Å–æ–±—ã—Ç–∏–µ</t:Subject>
                                <t:Start>2025-06-17T14:00:00Z</t:Start>
                                <t:End>2025-06-17T15:00:00Z</t:End>
                                <t:LegacyFreeBusyStatus>Busy</t:LegacyFreeBusyStatus>
                            </t:CalendarItem>
                            <t:CalendarItem>
                                <t:ItemId Id=""TEST003"" ChangeKey=""DwAAABYAAAA""/>
                                <t:Subject>[TEST] CalSync —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–±—ã—Ç–∏–µ 2</t:Subject>
                                <t:Start>2025-06-18T09:00:00Z</t:Start>
                                <t:End>2025-06-18T10:00:00Z</t:End>
                                <t:Location>–¢–µ—Å—Ç–æ–≤–∞—è –ª–æ–∫–∞—Ü–∏—è 2</t:Location>
                                <t:LegacyFreeBusyStatus>Tentative</t:LegacyFreeBusyStatus>
                            </t:CalendarItem>
                        </t:Items>
                    </m:RootFolder>
                </m:FindItemResponseMessage>
            </m:ResponseMessages>
        </m:FindItemResponse>
    </s:Body>
</s:Envelope>";
    }

    /// <summary>
    /// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π —Å–æ–±—ã—Ç–∏—è
    /// </summary>
    private string HandleGetItem(XDocument request)
    {
        return @"<?xml version=""1.0"" encoding=""utf-8""?>
<s:Envelope xmlns:s=""http://schemas.xmlsoap.org/soap/envelope/"">
    <s:Header>
        <h:ServerVersionInfo MajorVersion=""15"" MinorVersion=""0"" MajorBuildNumber=""1497"" MinorBuildNumber=""2"" Version=""V2016_SP1"" xmlns:h=""http://schemas.microsoft.com/exchange/services/2006/types""/>
    </s:Header>
    <s:Body>
        <m:GetItemResponse xmlns:m=""http://schemas.microsoft.com/exchange/services/2006/messages"" xmlns:t=""http://schemas.microsoft.com/exchange/services/2006/types"">
            <m:ResponseMessages>
                <m:GetItemResponseMessage ResponseClass=""Success"">
                    <m:ResponseCode>NoError</m:ResponseCode>
                    <m:Items>
                        <t:CalendarItem>
                            <t:ItemId Id=""TEST001"" ChangeKey=""DwAAABYAAAA""/>
                            <t:Subject>[TEST] CalSync —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–±—ã—Ç–∏–µ 1</t:Subject>
                            <t:Body BodyType=""Text"">–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–±—ã—Ç–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ CalSync

[CalSync-Test-Event-MOCK]</t:Body>
                            <t:Start>2025-06-17T10:00:00Z</t:Start>
                            <t:End>2025-06-17T11:00:00Z</t:End>
                            <t:Location>–¢–µ—Å—Ç–æ–≤–∞—è –ª–æ–∫–∞—Ü–∏—è 1</t:Location>
                            <t:LegacyFreeBusyStatus>Busy</t:LegacyFreeBusyStatus>
                            <t:LastModifiedTime>2025-06-17T13:15:00Z</t:LastModifiedTime>
                        </t:CalendarItem>
                    </m:Items>
                </m:GetItemResponseMessage>
            </m:ResponseMessages>
        </m:GetItemResponse>
    </s:Body>
</s:Envelope>";
    }

    /// <summary>
    /// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–∑–¥–∞–Ω–∏—è —Å–æ–±—ã—Ç–∏—è
    /// </summary>
    private string HandleCreateItem(XDocument request)
    {
        var newId = "TEST" + DateTime.Now.Ticks.ToString().Substring(10);
        return $@"<?xml version=""1.0"" encoding=""utf-8""?>
<s:Envelope xmlns:s=""http://schemas.xmlsoap.org/soap/envelope/"">
    <s:Header>
        <h:ServerVersionInfo MajorVersion=""15"" MinorVersion=""0"" MajorBuildNumber=""1497"" MinorBuildNumber=""2"" Version=""V2016_SP1"" xmlns:h=""http://schemas.microsoft.com/exchange/services/2006/types""/>
    </s:Header>
    <s:Body>
        <m:CreateItemResponse xmlns:m=""http://schemas.microsoft.com/exchange/services/2006/messages"" xmlns:t=""http://schemas.microsoft.com/exchange/services/2006/types"">
            <m:ResponseMessages>
                <m:CreateItemResponseMessage ResponseClass=""Success"">
                    <m:ResponseCode>NoError</m:ResponseCode>
                    <m:Items>
                        <t:CalendarItem>
                            <t:ItemId Id=""{newId}"" ChangeKey=""DwAAABYAAAA""/>
                        </t:CalendarItem>
                    </m:Items>
                </m:CreateItemResponseMessage>
            </m:ResponseMessages>
        </m:CreateItemResponse>
    </s:Body>
</s:Envelope>";
    }

    /// <summary>
    /// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–±—ã—Ç–∏—è
    /// </summary>
    private string HandleDeleteItem(XDocument request)
    {
        return @"<?xml version=""1.0"" encoding=""utf-8""?>
<s:Envelope xmlns:s=""http://schemas.xmlsoap.org/soap/envelope/"">
    <s:Header>
        <h:ServerVersionInfo MajorVersion=""15"" MinorVersion=""0"" MajorBuildNumber=""1497"" MinorBuildNumber=""2"" Version=""V2016_SP1"" xmlns:h=""http://schemas.microsoft.com/exchange/services/2006/types""/>
    </s:Header>
    <s:Body>
        <m:DeleteItemResponse xmlns:m=""http://schemas.microsoft.com/exchange/services/2006/messages"" xmlns:t=""http://schemas.microsoft.com/exchange/services/2006/types"">
            <m:ResponseMessages>
                <m:DeleteItemResponseMessage ResponseClass=""Success"">
                    <m:ResponseCode>NoError</m:ResponseCode>
                </m:DeleteItemResponseMessage>
            </m:ResponseMessages>
        </m:DeleteItemResponse>
    </s:Body>
</s:Envelope>";
    }

    /// <summary>
    /// –°–æ–∑–¥–∞—Ç—å –æ—Ç–≤–µ—Ç –æ–± –æ—à–∏–±–∫–µ
    /// </summary>
    private string CreateErrorResponse(string errorMessage)
    {
        return $@"<?xml version=""1.0"" encoding=""utf-8""?>
<s:Envelope xmlns:s=""http://schemas.xmlsoap.org/soap/envelope/"">
    <s:Body>
        <s:Fault>
            <faultcode>s:Server</faultcode>
            <faultstring>{errorMessage}</faultstring>
        </s:Fault>
    </s:Body>
</s:Envelope>";
    }

    public void Dispose()
    {
        Stop();
        _listener?.Close();
        _cancellationTokenSource?.Dispose();
    }
}